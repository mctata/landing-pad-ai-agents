name: CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test:unit
      env:
        MONGODB_URI: mongodb://localhost:27017/landing_pad_ai_agents_test
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-jwt-secret' }}
        
    - name: Run integration tests
      run: npm run test:integration
      env:
        MONGODB_URI: mongodb://localhost:27017/landing_pad_ai_agents_test
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-jwt-secret' }}
        
    - name: Run API tests
      run: npm run test:api
      env:
        MONGODB_URI: mongodb://localhost:27017/landing_pad_ai_agents_test
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-jwt-secret' }}
        
    - name: Generate test coverage
      run: npm run test:ci
      env:
        MONGODB_URI: mongodb://localhost:27017/landing_pad_ai_agents_test
        NODE_ENV: test
        JWT_SECRET: ${{ secrets.JWT_SECRET || 'test-jwt-secret' }}
        
    - name: Upload test coverage
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage/