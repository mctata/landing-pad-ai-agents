version: '3.8'

services:
  app:
    build:
      context: .
      target: production
    image: landing-pad-ai-agents:${TAG:-latest}
    restart: always
    environment:
      # Core settings
      - NODE_ENV=production
      - PORT=3000
      
      # Database settings
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-agents_db}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_SSL=${DB_SSL:-true}
      
      # Message queue
      - RABBITMQ_URL=${RABBITMQ_URL}
      
      # Caching
      - REDIS_URL=${REDIS_URL}
      
      # Security settings
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRY=${JWT_EXPIRY:-1h}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_REFRESH_EXPIRY=${JWT_REFRESH_EXPIRY:-7d}
      - SESSION_SECRET=${SESSION_SECRET}
      - CSRF_TOKEN_SECRET=${CSRF_TOKEN_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
      - COOKIE_DOMAIN=${COOKIE_DOMAIN}
      - COOKIE_SECURE=true
      - CORS_ORIGINS=${CORS_ORIGINS}
      - TRUSTED_IPS=${TRUSTED_IPS}
      - RATE_LIMIT_WINDOW=${RATE_LIMIT_WINDOW:-900000}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX:-100}
      
      # API providers
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Storage
      - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
      - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
      - S3_REGION=${S3_REGION:-us-east-1}
      - S3_BUCKET=${S3_BUCKET:-landing-pad-ai-agents-production}
      
      # Logging & Monitoring
      - LOG_LEVEL=${LOG_LEVEL:-warn}
      - HEALTH_CHECK_INTERVAL=${HEALTH_CHECK_INTERVAL:-60000}
      - PERFORMANCE_SAMPLE_RATE=${PERFORMANCE_SAMPLE_RATE:-0.1}
    networks:
      - landing-pad-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - app-logs:/app/logs
      - app-storage:/app/storage
    read_only: true
    tmpfs:
      - /tmp
      - /app/logs
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-changeme}
    restart: always
    volumes:
      - redis-data:/data
    networks:
      - landing-pad-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - landing-pad-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 60s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

networks:
  landing-pad-network:
    driver: bridge
    internal: false
    # Add IPv6 support
    ipam:
      config:
        - subnet: 172.28.0.0/16
    driver_opts:
      encrypted: "true"

volumes:
  app-logs:
  app-storage:
  redis-data:
  nginx-logs: